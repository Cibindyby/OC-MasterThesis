
@inproceedings{doerr_self-adjusting_2019,
	address = {Prague Czech Republic},
	title = {Self-adjusting mutation rates with provably optimal success rules},
	isbn = {978-1-4503-6111-8},
	url = {https://dl.acm.org/doi/10.1145/3321707.3321733},
	doi = {10.1145/3321707.3321733},
	language = {en},
	urldate = {2025-01-03},
	booktitle = {Proceedings of the {Genetic} and {Evolutionary} {Computation} {Conference}},
	publisher = {ACM},
	author = {Doerr, Benjamin and Doerr, Carola and Lengler, Johannes},
	month = jul,
	year = {2019},
	pages = {1479--1487},
	file = {Volltext:files/360/Doerr et al. - 2019 - Self-adjusting mutation rates with provably optima.pdf:application/pdf},
}

@misc{milano_scaling_2018,
	title = {Scaling {Up} {Cartesian} {Genetic} {Programming} through {Preferential} {Selection} of {Larger} {Solutions}},
	url = {http://arxiv.org/abs/1810.09485},
	abstract = {We demonstrate how efficiency of Cartesian Genetic Programming method can be scaled up through the preferential selection of phenotypically larger solutions, i.e. through the preferential selection of larger solutions among equally good solutions. The advantage of the preferential selection of larger solutions is validated on the six, seven and eight-bit parity problems, on a dynamically varying problem involving the classification of binary patterns, and on the Paige regression problem. In all cases, the preferential selection of larger solutions provides an advantage in term of the performance of the evolved solutions and in term of speed, the number of evaluations required to evolve optimal or high-quality solutions. The advantage provided by the preferential selection of larger solutions can be further extended by self-adapting the mutation rate through the one-fifth success rule. Finally, for problems like the Paige regression in which neutrality plays a minor role, the advantage of the preferential selection of larger solutions can be extended by preferring larger solutions also among quasi-neutral alternative candidate solutions, i.e. solutions achieving slightly different performance.},
	urldate = {2024-10-14},
	publisher = {arXiv},
	author = {Milano, Nicola and Nolfi, Stefano},
	month = oct,
	year = {2018},
	note = {arXiv:1810.09485},
	keywords = {Computer Science - Neural and Evolutionary Computing},
	file = {Preprint PDF:files/329/Milano und Nolfi - 2018 - Scaling Up Cartesian Genetic Programming through P.pdf:application/pdf;Snapshot:files/330/1810.html:text/html},
}

@article{crepinsek_exploration_2013,
	title = {Exploration and exploitation in evolutionary algorithms: {A} survey},
	volume = {45},
	issn = {0360-0300, 1557-7341},
	shorttitle = {Exploration and exploitation in evolutionary algorithms},
	url = {https://dl.acm.org/doi/10.1145/2480741.2480752},
	doi = {10.1145/2480741.2480752},
	abstract = {“Exploration and exploitation are the two cornerstones of problem solving by search.” For more than a decade, Eiben and Schippers' advocacy for balancing between these two antagonistic cornerstones still greatly influences the research directions of evolutionary algorithms (EAs) [1998]. This article revisits nearly 100 existing works and surveys how such works have answered the advocacy. The article introduces a fresh treatment that classifies and discusses existing work within three rational aspects: (1) what and how EA components contribute to exploration and exploitation; (2) when and how exploration and exploitation are controlled; and (3) how balance between exploration and exploitation is achieved. With a more comprehensive and systematic understanding of exploration and exploitation, more research in this direction may be motivated and refined.},
	language = {en},
	number = {3},
	urldate = {2024-12-29},
	journal = {ACM Computing Surveys},
	author = {Črepinšek, Matej and Liu, Shih-Hsi and Mernik, Marjan},
	month = jun,
	year = {2013},
	pages = {1--33},
	file = {Črepinšek et al. - 2013 - Exploration and exploitation in evolutionary algor.pdf:files/357/Črepinšek et al. - 2013 - Exploration and exploitation in evolutionary algor.pdf:application/pdf},
}

@article{hassanat_choosing_2019,
	title = {Choosing {Mutation} and {Crossover} {Ratios} for {Genetic} {Algorithms}—{A} {Review} with a {New} {Dynamic} {Approach}},
	volume = {10},
	copyright = {https://creativecommons.org/licenses/by/4.0/},
	issn = {2078-2489},
	url = {https://www.mdpi.com/2078-2489/10/12/390},
	doi = {10.3390/info10120390},
	abstract = {Genetic algorithm (GA) is an artiﬁcial intelligence search method that uses the process of evolution and natural selection theory and is under the umbrella of evolutionary computing algorithm. It is an efﬁcient tool for solving optimization problems. Integration among (GA) parameters is vital for successful (GA) search. Such parameters include mutation and crossover rates in addition to population that are important issues in (GA). However, each operator of GA has a special and different inﬂuence. The impact of these factors is inﬂuenced by their probabilities; it is difﬁcult to predeﬁne speciﬁc ratios for each parameter, particularly, mutation and crossover operators. This paper reviews various methods for choosing mutation and crossover ratios in GAs. Next, we deﬁne new deterministic control approaches for crossover and mutation rates, namely Dynamic Decreasing of high mutation ratio/dynamic increasing of low crossover ratio (DHM/ILC), and Dynamic Increasing of Low Mutation/Dynamic Decreasing of High Crossover (ILM/DHC). The dynamic nature of the proposed methods allows the ratios of both crossover and mutation operators to be changed linearly during the search progress, where (DHM/ILC) starts with 100\% ratio for mutations, and 0\% for crossovers. Both mutation and crossover ratios start to decrease and increase, respectively. By the end of the search process, the ratios will be 0\% for mutations and 100\% for crossovers. (ILM/DHC) worked the same but the other way around. The proposed approach was compared with two parameters tuning methods (predeﬁned), namely ﬁfty-ﬁfty crossover/mutation ratios, and the most common approach that uses static ratios such as (0.03) mutation rates and (0.9) crossover rates. The experiments were conducted on ten Traveling Salesman Problems (TSP). The experiments showed the effectiveness of the proposed (DHM/ILC) when dealing with small population size, while the proposed (ILM/DHC) was found to be more effective when using large population size. In fact, both proposed dynamic methods outperformed the predeﬁned methods compared in most cases tested.},
	language = {en},
	number = {12},
	urldate = {2024-12-10},
	journal = {Information},
	author = {Hassanat, Ahmad and Almohammadi, Khalid and Alkafaween, Esra’a and Abunawas, Eman and Hammouri, Awni and Prasath, V. B. Surya},
	month = dec,
	year = {2019},
	pages = {390},
	file = {Hassanat et al. - 2019 - Choosing Mutation and Crossover Ratios for Genetic.pdf:files/346/Hassanat et al. - 2019 - Choosing Mutation and Crossover Ratios for Genetic.pdf:application/pdf},
}

@inproceedings{syswerda_uniform_1989,
	address = {Fairfax, Virginia, USA},
	title = {Uniform {Crossover} in {Genetic} {Algorithms}},
	isbn = {1-55860-066-3},
	url = {https://www.researchgate.net/publication/201976488_Uniform_Crossover_in_Genetic_Algorithms},
	abstract = {A different crossover operator, uniform crossover, is presented. It is compared theoretically and empirically with one-point and two-point crossover and is shown to be superior in most cases.},
	language = {en},
	urldate = {2024-12-27},
	booktitle = {Proceedings of the {Third} {International} {Conference} on {Genetic} {Algorithms}, {George} {Mason} {University}, {Fairfax}, {Virginia}, {USA}, {June} 1989},
	author = {Syswerda, Gilbert},
	month = jan,
	year = {1989},
	file = {(PDF) Uniform Crossover in Genetic Algorithms.pdf:files/355/(PDF) Uniform Crossover in Genetic Algorithms.pdf:application/pdf;Snapshot:files/354/201976488_Uniform_Crossover_in_Genetic_Algorithms.html:text/html},
}

@article{pavai_survey_2017,
	title = {A {Survey} on {Crossover} {Operators}},
	volume = {49},
	issn = {0360-0300, 1557-7341},
	url = {https://dl.acm.org/doi/10.1145/3009966},
	doi = {10.1145/3009966},
	abstract = {Crossover is an important operation in the Genetic Algorithms (GA). Crossover operation is responsible for producing offspring for the next generation so as to explore a much wider area of the solution space. There are many crossover operators designed to cater to different needs of different optimization problems. Despite the many analyses, it is still difficult to decide which crossover to use when. In this article, we have considered the various existing crossover operators based on the application for which they were designed for and the purpose that they were designed for. We have classified the existing crossover operators into two broad categories, namely (1) Crossover operators for representation of applications -- where the crossover operators designed to suit the representation aspect of applications are discussed along with how the crossover operators work and (2) Crossover operators for improving GA performance of applications -- where crossover operators designed to influence the quality of the solution and speed of GA are discussed. We have also come up with some interesting future directions in the area of designing new crossover operators as a result of our survey.},
	language = {en},
	number = {4},
	urldate = {2024-12-10},
	journal = {ACM Computing Surveys},
	author = {Pavai, G. and Geetha, T. V.},
	month = dec,
	year = {2017},
	pages = {1--43},
	file = {Pavai und Geetha - 2017 - A Survey on Crossover Operators.pdf:files/349/Pavai und Geetha - 2017 - A Survey on Crossover Operators.pdf:application/pdf},
}

@incollection{mernik_refining_2022,
	address = {Cham},
	title = {Refining {Mutation} {Variants} in {Cartesian} {Genetic} {Programming}},
	volume = {13627},
	isbn = {978-3-031-21094-5},
	url = {https://link.springer.com/10.1007/978-3-031-21094-5_14},
	language = {en},
	urldate = {2024-12-10},
	booktitle = {Bioinspired {Optimization} {Methods} and {Their} {Applications}},
	publisher = {Springer International Publishing},
	author = {Cui, Henning and Margraf, Andreas and Hähner, Jörg},
	editor = {Mernik, Marjan and Eftimov, Tome and Črepinšek, Matej},
	year = {2022},
	doi = {10.1007/978-3-031-21094-5_14},
	note = {Series Title: Lecture Notes in Computer Science},
	pages = {185--200},
	file = {Cui et al. - 2022 - Refining Mutation Variants in Cartesian Genetic Pr.pdf:files/344/Cui et al. - 2022 - Refining Mutation Variants in Cartesian Genetic Pr.pdf:application/pdf},
}

@inproceedings{da_silva_cartesian_2018,
	title = {Cartesian {Genetic} {Programming} with {Crossover} for {Designing} {Combinational} {Logic} {Circuits}},
	doi = {10.1109/BRACIS.2018.00033},
	abstract = {The development of an efficient crossover for Cartesian Genetic Programming (CGP) has been widely investigated, but there is not a large number of approaches using this type of operator when designing combinational logic circuits. In this paper, we introduce a new crossover for CGP when using a single genotype representation and the desired model has multiple outputs. The proposal modifies the standard evolutionary strategy commonly adopted in CGP by combining the subgraphs of the best outputs of the parent and its offspring in order to generate a new fittest individual. The proposed crossover is applied to combinational logic circuits with multiple outputs, a parameter analysis is performed, and the results obtained are compared to those found by a baseline CGP and other techniques from the literature.},
	booktitle = {2018 7th {Brazilian} {Conference} on {Intelligent} {Systems} ({BRACIS})},
	author = {da Silva, José Eduardo and Bernardino, Heder S.},
	month = oct,
	year = {2018},
	keywords = {Biological cells, Cartesian Genetic Programming, Crossover, Combinational Logic Circuits, Combinational circuits, Genetic programming, Integrated circuit modeling, Logic gates, Proposals, Standards},
	pages = {145--150},
	file = {IEEE Xplore Abstract Record:files/57/stamp.html:text/html;IEEE Xplore Full Text PDF:files/56/da Silva und Bernardino - 2018 - Cartesian Genetic Programming with Crossover for D.pdf:application/pdf},
}

@book{krawiec_genetic_2013,
	address = {Berlin, Heidelberg},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Genetic {Programming}: 16th {European} {Conference}, {EuroGP} 2013, {Vienna}, {Austria}, {April} 3-5, 2013. {Proceedings}},
	volume = {7831},
	copyright = {http://www.springer.com/tdm},
	isbn = {978-3-642-37206-3},
	shorttitle = {Genetic {Programming}},
	url = {http://link.springer.com/10.1007/978-3-642-37207-0},
	language = {en},
	urldate = {2024-07-01},
	publisher = {Springer Berlin Heidelberg},
	editor = {Krawiec, Krzysztof and Moraglio, Alberto and Hu, Ting and Etaner-Uyar, A. Şima and Hu, Bin and Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor, Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and Sudan, Madhu and Terzopoulos, Demetri and Tygar, Doug and Vardi, Moshe Y. and Weikum, Gerhard},
	year = {2013},
	doi = {10.1007/978-3-642-37207-0},
	file = {Krawiec et al. - 2013 - Genetic Programming 16th European Conference, Eur.pdf:files/254/Krawiec et al. - 2013 - Genetic Programming 16th European Conference, Eur.pdf:application/pdf},
}

@inproceedings{koza_survey_1995,
	address = {San Francisco, CA, USA},
	title = {Survey of genetic algorithms and genetic programming},
	isbn = {978-0-7803-2636-1},
	url = {http://ieeexplore.ieee.org/document/485447/},
	doi = {10.1109/WESCON.1995.485447},
	abstract = {This paper provides an introduction to genetic algorithms and genetic programming and lists sources of additional information, including books and conferences as well as e-mail lists and software that is available over the Internet.},
	language = {en},
	urldate = {2024-08-09},
	booktitle = {Proceedings of {WESCON}'95},
	publisher = {IEEE},
	author = {Koza, J. R.},
	year = {1995},
	pages = {589},
	file = {Koza - 1995 - Survey of genetic algorithms and genetic programmi.pdf:files/280/Koza - 1995 - Survey of genetic algorithms and genetic programmi.pdf:application/pdf},
}

@misc{cuihen_cuihencgp_with_crossover_strategies_2024,
	title = {{CuiHen}/{CGP}\_with\_Crossover\_Strategies},
	copyright = {GPL-3.0},
	url = {https://github.com/CuiHen/CGP_with_Crossover_Strategies},
	urldate = {2024-06-11},
	author = {CuiHen},
	month = apr,
	year = {2024},
	note = {original-date: 2024-03-15T09:54:31Z},
}

@article{milad_taleby_ahvanooey_survey_2019,
	title = {A {Survey} of {Genetic} {Programming} and {Its} {Applications}},
	volume = {13},
	issn = {19767277},
	url = {http://itiis.org/digital-library/manuscript/2311},
	doi = {10.3837/tiis.2019.04.002},
	abstract = {Genetic Programming (GP) is an intelligence technique whereby computer programs are encoded as a set of genes which are evolved utilizing a Genetic Algorithm (GA). In other words, the GP employs novel optimization techniques to modify computer programs; imitating the way humans develop programs by progressively re-writing them for solving problems automatically. Trial programs are frequently altered in the search for obtaining superior solutions due to the base is GA. These are evolutionary search techniques inspired by biological evolution such as mutation, reproduction, natural selection, recombination, and survival of the fittest. The power of GAs is being represented by an advancing range of applications; vector processing, quantum computing, VLSI circuit layout, and so on. But one of the most significant uses of GAs is the automatic generation of programs. Technically, the GP solves problems automatically without having to tell the computer specifically how to process it. To meet this requirement, the GP utilizes GAs to a “population” of trial programs, traditionally encoded in memory as tree-structures. Trial programs are estimated using a “fitness function” and the suited solutions picked for re-evaluation and modification such that this sequence is replicated until a “correct” program is generated. GP has represented its power by modifying a simple program for categorizing news stories, executing optical character recognition, medical signal filters, and for target identification, etc. This paper reviews existing literature regarding the GPs and their applications in different scientific fields and aims to provide an easy understanding of various types of GPs for beginners.},
	language = {en},
	number = {4},
	urldate = {2024-09-18},
	journal = {KSII Transactions on Internet and Information Systems},
	author = {Milad Taleby Ahvanooey and Qianmu Li and Ming Wu and Shuo Wang},
	month = apr,
	year = {2019},
	file = {2019 - A Survey of Genetic Programming and Its Applicatio.pdf:files/309/2019 - A Survey of Genetic Programming and Its Applicatio.pdf:application/pdf},
}

@article{torabi_using_2022,
	title = {Using {Cartesian} {Genetic} {Programming} {Approach} with {New} {Crossover} {Technique} to {Design} {Convolutional} {Neural} {Networks}},
	issn = {1370-4621, 1573-773X},
	url = {https://link.springer.com/10.1007/s11063-022-11093-0},
	doi = {10.1007/s11063-022-11093-0},
	abstract = {In image classiﬁcation problems, Convolutional Neural Networks (CNNs) are deep neural networks that include a variety of different layers aimed at classifying images. Until today, the most promising and state-of-the-art method in image recognition tasks is CNN. Tuning the deep network with a large number of hyperparameters to maximize performance would be an excruciating task that requires lots of time and engineering efforts. To construct that high-performance architecture, experts should go through a lot of trial and error. Neural Architecture Search is a way to automatically fabricate an accurate network architecture. An evolutionary algorithm called Cartesian Genetic Programming (CGP) with a new crossover operation based on the multiple Sequence Alignment algorithm is proposed in this paper to construct an appropriate neural network without the burden of building manually. This new method has a remarkable improvement over a standard CGP only by adding a crossover operator. The datasets for training on the proposed method were CIFAR-10 and CIFAR-100. The results show that it achieves a good balance between accuracy and the number of trainable parameters compared to the other state-of-the-art methods.},
	language = {en},
	urldate = {2023-05-30},
	journal = {Neural Processing Letters},
	author = {Torabi, Ali and Sharifi, Arash and Teshnehlab, Mohammad},
	month = dec,
	year = {2022},
	file = {Torabi et al. - 2022 - Using Cartesian Genetic Programming Approach with .pdf:files/64/Torabi et al. - 2022 - Using Cartesian Genetic Programming Approach with .pdf:application/pdf},
}

@inproceedings{clegg_new_2007,
	address = {London England},
	title = {A new crossover technique for {Cartesian} genetic programming},
	isbn = {978-1-59593-697-4},
	url = {https://dl.acm.org/doi/10.1145/1276958.1277276},
	doi = {10.1145/1276958.1277276},
	language = {en},
	urldate = {2023-05-30},
	booktitle = {Proceedings of the 9th annual conference on {Genetic} and evolutionary computation},
	publisher = {ACM},
	author = {Clegg, Janet and Walker, James Alfred and Miller, Julian Frances},
	month = jul,
	year = {2007},
	pages = {1580--1587},
	file = {Full Text PDF:files/50/Clegg et al. - 2007 - A new crossover technique for Cartesian genetic pr.pdf:application/pdf},
}

@inproceedings{kalkreuth_comprehensive_2020,
	address = {Budapest, Hungary},
	title = {A {Comprehensive} {Study} on {Subgraph} {Crossover} in {Cartesian} {Genetic} {Programming}:},
	isbn = {978-989-758-475-6},
	shorttitle = {A {Comprehensive} {Study} on {Subgraph} {Crossover} in {Cartesian} {Genetic} {Programming}},
	url = {https://www.scitepress.org/DigitalLibrary/Link.aspx?doi=10.5220/0010110700590070},
	doi = {10.5220/0010110700590070},
	language = {en},
	urldate = {2024-06-11},
	booktitle = {Proceedings of the 12th {International} {Joint} {Conference} on {Computational} {Intelligence}},
	publisher = {SCITEPRESS - Science and Technology Publications},
	author = {Kalkreuth, Roman},
	year = {2020},
	keywords = {Regression},
	pages = {59--70},
	file = {Kalkreuth - 2020 - A Comprehensive Study on Subgraph Crossover in Car.pdf:files/205/Kalkreuth - 2020 - A Comprehensive Study on Subgraph Crossover in Car.pdf:application/pdf},
}

@article{miller_cartesian_2020,
	title = {Cartesian genetic programming: its status and future},
	volume = {21},
	issn = {1389-2576, 1573-7632},
	shorttitle = {Cartesian genetic programming},
	url = {http://link.springer.com/10.1007/s10710-019-09360-6},
	doi = {10.1007/s10710-019-09360-6},
	abstract = {Cartesian genetic programming, a well-established method of genetic programming, is approximately 20 years old. It represents solutions to computational problems as graphs. Its genetic encoding includes explicitly redundant genes which are wellknown to assist in effective evolutionary search. In this article, we review and compare many of the important aspects of the method and findings discussed since its inception. In the process, we make many suggestions for further work which could improve the efficiency of the CGP for solving computational problems.},
	language = {en},
	number = {1-2},
	urldate = {2024-06-11},
	journal = {Genetic Programming and Evolvable Machines},
	author = {Miller, Julian Francis},
	month = jun,
	year = {2020},
	keywords = {Grundlagen},
	pages = {129--168},
	file = {Miller - 2020 - Cartesian genetic programming its status and futu.pdf:files/209/Miller - 2020 - Cartesian genetic programming its status and futu.pdf:application/pdf},
}

@article{araujo_genetic_2020,
	title = {Genetic programming for natural language processing},
	volume = {21},
	issn = {1389-2576, 1573-7632},
	url = {http://link.springer.com/10.1007/s10710-019-09361-5},
	doi = {10.1007/s10710-019-09361-5},
	abstract = {This work takes us through the literature on applications of genetic programming to problems of natural language processing. The purpose of natural language processing is to allow us to communicate with computers in natural language. Among the problems addressed in the area is, for example, the extraction of information, which draws relevant data from unstructured texts written in natural language. There are also domains of application of particular relevance because of the difficulty in dealing with the corresponding documents, such as opinion mining in social networks, or because of the need for high precision in the information extracted, such as the biomedical domain. There have been proposals to apply genetic programming techniques in several of these areas. This tour allows us to observe the potential—not yet fully exploited—of such applications. We also review some cases in which genetic programming can provide information that is absent from other approaches, revealing its ability to provide easy to interpret results, in form of programs or functions. Finally, we identify some important challenges in the area.},
	language = {en},
	number = {1-2},
	urldate = {2024-11-25},
	journal = {Genetic Programming and Evolvable Machines},
	author = {Araujo, Lourdes},
	month = jun,
	year = {2020},
	pages = {11--32},
	file = {Araujo - 2020 - Genetic programming for natural language processin.pdf:files/337/Araujo - 2020 - Genetic programming for natural language processin.pdf:application/pdf},
}

@article{demirbas_stress_2022,
	title = {Stress {Analysis} of {2D}-{FG} {Rectangular} {Plates} with {Multi}-{Gene} {Genetic} {Programming}},
	volume = {12},
	copyright = {https://creativecommons.org/licenses/by/4.0/},
	issn = {2076-3417},
	url = {https://www.mdpi.com/2076-3417/12/16/8198},
	doi = {10.3390/app12168198},
	abstract = {Functionally Graded Materials (FGMs) are designed for use in high-temperature applications. Since the mass production of FGM has not yet been made, the determination of its thermomechanical limits depends on the compositional gradient exponent value. In this study, an efﬁcient working model is created for the thermal stress problem of the 2D-FG plate using Multi-gene Genetic Programming (MGGP). In our MGGP model in this study, data sets obtained from the numerical analysis results of the thermal stress problem are used, and formulas that give equivalent stress levels as output data, with the input data being the compositional gradient exponent, are obtained. For the current problem, efﬁcient models that reduce CPU processing time are obtained by using the MGGP method.},
	language = {en},
	number = {16},
	urldate = {2024-11-25},
	journal = {Applied Sciences},
	author = {Demirbas, Munise Didem and Çakır, Didem and Ozturk, Celal and Arslan, Sibel},
	month = aug,
	year = {2022},
	pages = {8198},
	file = {Demirbas et al. - 2022 - Stress Analysis of 2D-FG Rectangular Plates with M.pdf:files/335/Demirbas et al. - 2022 - Stress Analysis of 2D-FG Rectangular Plates with M.pdf:application/pdf},
}

@article{sette_genetic_2001,
	title = {Genetic programming: principles and applications},
	volume = {14},
	copyright = {https://www.elsevier.com/tdm/userlicense/1.0/},
	issn = {09521976},
	shorttitle = {Genetic programming},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0952197602000131},
	doi = {10.1016/S0952-1976(02)00013-1},
	abstract = {Genetic algorithms (GA) has given rise to two new ﬁelds of research where (global) optimisation is of crucial importance: ‘genetic based machine learning’ (GBML) and ‘genetic programming’ (GP). An introduction by the authors to GA and GBML was given in two previous papers (Eng. Appl. Artif. Intell. 9(6) (1996) 681; Eng. Appl. Artif. Intell. 13(4) (2000) 381). In this paper, the last domain (GP) will be introduced, thereby making up a trilogy which gives a general overview of the whole ﬁeld. In this third part, an overview will be given of the basic concepts of GP as deﬁned by Koza. A ﬁrst (educational) example of GP is given by solving a simple symbolic regression of a sinus function. Finally, a more complex application is presented in which GP is used to construct the mathematical equations for an industrial process. To this end, the case study ‘ﬁbre-to-yarn production process’ is introduced. The goal of this study is the automatic development of mathematical equations for the prediction of spinnability and (possible) resulting yarn strength. It is shown that (relatively) simple equations can be obtained which describe accurately 90\% of the ﬁbre-to-yarn database. r 2002 Elsevier Science Ltd. All rights reserved.},
	language = {en},
	number = {6},
	urldate = {2024-08-09},
	journal = {Engineering Applications of Artificial Intelligence},
	author = {Sette, S. and Boullart, L.},
	month = dec,
	year = {2001},
	pages = {727--736},
	file = {Sette und Boullart - 2001 - Genetic programming principles and applications.pdf:files/283/Sette und Boullart - 2001 - Genetic programming principles and applications.pdf:application/pdf},
}
